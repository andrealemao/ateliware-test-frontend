{"remainingRequest":"E:\\Cursos\\teste-dev-ateliware\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Cursos\\teste-dev-ateliware\\frontend\\src\\components\\RepositoriesList.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"E:\\Cursos\\teste-dev-ateliware\\frontend\\src\\components\\RepositoriesList.vue","mtime":1616957100803},{"path":"E:\\Cursos\\teste-dev-ateliware\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Cursos\\teste-dev-ateliware\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\Cursos\\teste-dev-ateliware\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\Cursos\\teste-dev-ateliware\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Cursos\\teste-dev-ateliware\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLyogLmxpc3Qgew0KICBtYXgtd2lkdGg6IDc1MHB4Ow0KfSAqLw0K"},{"version":3,"sources":["RepositoriesList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsIA;AACA;AACA","file":"RepositoriesList.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-row align=\"center\" class=\"px-3 mx-auto mt-10\">\r\n    <v-col cols=\"12\" md=\"8\">\r\n      <!-- <v-text-field v-model=\"name\" label=\"Buscar pelo Nome\"></v-text-field> -->\r\n    </v-col>\r\n\r\n    <v-col cols=\"12\" md=\"4\">\r\n      <!-- <v-btn small @click=\"searchName\">\r\n        Buscar\r\n      </v-btn> -->\r\n    </v-col>\r\n\r\n    <v-col cols=\"12\" sm=\"12\" >\r\n      <v-card class=\"mx-auto\" tile>\r\n        <v-card-title>Repositórios</v-card-title>\r\n\r\n        <v-data-table\r\n          :headers=\"headers\"\r\n          :items=\"repositories\"\r\n          disable-pagination\r\n          :hide-default-footer=\"true\"\r\n        >\r\n          <template v-slot:[`item.actions`]=\"{ item }\">\r\n            <v-icon small class=\"mr-2\" @click=\"editRepository(item.id)\">mdi-plus</v-icon>\r\n            <v-icon small @click=\"deleteRepository(item.id)\">mdi-delete</v-icon>\r\n          </template>\r\n        </v-data-table>\r\n\r\n        <v-card-actions v-if=\"repositories.length > 0\">\r\n          <v-btn small color=\"error\" @click=\"removeAllRepositories\">\r\n            Deletar todos\r\n          </v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-col>\r\n  </v-row>\r\n</template>\r\n\r\n<script>\r\nimport RepositoryDataService from \"../services/RepositoryDataService\";\r\nexport default {\r\n  name: \"repositories-list\",\r\n  data() {\r\n    return {\r\n      repositories: [],\r\n      name: \"\",\r\n      headers: [\r\n        { text: \"Nome\", align: \"start\", sortable: false, value: \"name\" },\r\n        // { text: \"Avatar\", value: \"avatar_url\", sortable: false },\r\n        { text: \"Linguagem\", value: \"language\", sortable: false },\r\n        // { text: \"Dono\", value: \"owner\", sortable: false },\r\n        { text: \"Qtd. Estrelas\", value: \"stargazers_count\", sortable: false },\r\n        // { text: \"Forks\", value: \"forks\", sortable: false },\r\n        { text: \"URL\", value: \"html_url\", sortable: false },\r\n        // { text: \"Descriçao\", value: \"description\", sortable: false },\r\n        { text: \"Actions\", value: \"actions\", sortable: false }\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    retrieveRepositories() {\r\n      RepositoryDataService.getAll()\r\n        .then((response) => {\r\n          this.repositories = response.data.map(this.getDisplayRepository);\r\n          console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    refreshList() {\r\n      this.retrieveRepositories();\r\n    },\r\n\r\n    removeAllRepositories() {\r\n      RepositoryDataService.deleteAll()\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          this.refreshList();\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    searchName() {\r\n      console.log(this.name)\r\n      RepositoryDataService.findByName(this.name)\r\n        .then((response) => {\r\n          this.repositories = response.data.map(this.getDisplayRepository);\r\n          console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    editRepository(id) {\r\n      this.$router.push({ name: \"repository-details\", params: { id: id } });\r\n    },\r\n\r\n    deleteRepository(id) {\r\n      RepositoryDataService.delete(id)\r\n        .then(() => {\r\n          this.refreshList();\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    getDisplayRepository(repository) {\r\n      console.log(repository)\r\n      return {\r\n        id: repository.id,\r\n        avatar_url: repository.avatar_url,\r\n        name: repository.name,\r\n        language: repository.language,\r\n        owner: repository.owner,\r\n        stargazers_count: repository.stargazers_count,\r\n        forks: repository.forks,\r\n        html_url: repository.html_url,\r\n        description: repository.description.length > 30 ? repository.description.substr(0, 30) + \"...\" : repository.description,\r\n      };\r\n    },\r\n  },\r\n  mounted() {\r\n    this.retrieveRepositories();\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* .list {\r\n  max-width: 750px;\r\n} */\r\n</style>"]}]}