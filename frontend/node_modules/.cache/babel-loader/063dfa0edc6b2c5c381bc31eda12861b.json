{"remainingRequest":"E:\\Cursos\\teste-dev-ateliware\\frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\Cursos\\teste-dev-ateliware\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Cursos\\teste-dev-ateliware\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Cursos\\teste-dev-ateliware\\frontend\\src\\components\\RepositoriesList.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Cursos\\teste-dev-ateliware\\frontend\\src\\components\\RepositoriesList.vue","mtime":1616957100803},{"path":"E:\\Cursos\\teste-dev-ateliware\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Cursos\\teste-dev-ateliware\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\Cursos\\teste-dev-ateliware\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Cursos\\teste-dev-ateliware\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvbi5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBSZXBvc2l0b3J5RGF0YVNlcnZpY2UgZnJvbSAiLi4vc2VydmljZXMvUmVwb3NpdG9yeURhdGFTZXJ2aWNlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJyZXBvc2l0b3JpZXMtbGlzdCIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlcG9zaXRvcmllczogW10sCiAgICAgIG5hbWU6ICIiLAogICAgICBoZWFkZXJzOiBbewogICAgICAgIHRleHQ6ICJOb21lIiwKICAgICAgICBhbGlnbjogInN0YXJ0IiwKICAgICAgICBzb3J0YWJsZTogZmFsc2UsCiAgICAgICAgdmFsdWU6ICJuYW1lIgogICAgICB9LCAvLyB7IHRleHQ6ICJBdmF0YXIiLCB2YWx1ZTogImF2YXRhcl91cmwiLCBzb3J0YWJsZTogZmFsc2UgfSwKICAgICAgewogICAgICAgIHRleHQ6ICJMaW5ndWFnZW0iLAogICAgICAgIHZhbHVlOiAibGFuZ3VhZ2UiLAogICAgICAgIHNvcnRhYmxlOiBmYWxzZQogICAgICB9LCAvLyB7IHRleHQ6ICJEb25vIiwgdmFsdWU6ICJvd25lciIsIHNvcnRhYmxlOiBmYWxzZSB9LAogICAgICB7CiAgICAgICAgdGV4dDogIlF0ZC4gRXN0cmVsYXMiLAogICAgICAgIHZhbHVlOiAic3RhcmdhemVyc19jb3VudCIsCiAgICAgICAgc29ydGFibGU6IGZhbHNlCiAgICAgIH0sIC8vIHsgdGV4dDogIkZvcmtzIiwgdmFsdWU6ICJmb3JrcyIsIHNvcnRhYmxlOiBmYWxzZSB9LAogICAgICB7CiAgICAgICAgdGV4dDogIlVSTCIsCiAgICAgICAgdmFsdWU6ICJodG1sX3VybCIsCiAgICAgICAgc29ydGFibGU6IGZhbHNlCiAgICAgIH0sIC8vIHsgdGV4dDogIkRlc2NyacOnYW8iLCB2YWx1ZTogImRlc2NyaXB0aW9uIiwgc29ydGFibGU6IGZhbHNlIH0sCiAgICAgIHsKICAgICAgICB0ZXh0OiAiQWN0aW9ucyIsCiAgICAgICAgdmFsdWU6ICJhY3Rpb25zIiwKICAgICAgICBzb3J0YWJsZTogZmFsc2UKICAgICAgfV0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICByZXRyaWV2ZVJlcG9zaXRvcmllczogZnVuY3Rpb24gcmV0cmlldmVSZXBvc2l0b3JpZXMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBSZXBvc2l0b3J5RGF0YVNlcnZpY2UuZ2V0QWxsKCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy5yZXBvc2l0b3JpZXMgPSByZXNwb25zZS5kYXRhLm1hcChfdGhpcy5nZXREaXNwbGF5UmVwb3NpdG9yeSk7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgIH0pOwogICAgfSwKICAgIHJlZnJlc2hMaXN0OiBmdW5jdGlvbiByZWZyZXNoTGlzdCgpIHsKICAgICAgdGhpcy5yZXRyaWV2ZVJlcG9zaXRvcmllcygpOwogICAgfSwKICAgIHJlbW92ZUFsbFJlcG9zaXRvcmllczogZnVuY3Rpb24gcmVtb3ZlQWxsUmVwb3NpdG9yaWVzKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIFJlcG9zaXRvcnlEYXRhU2VydmljZS5kZWxldGVBbGwoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICBfdGhpczIucmVmcmVzaExpc3QoKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgfSk7CiAgICB9LAogICAgc2VhcmNoTmFtZTogZnVuY3Rpb24gc2VhcmNoTmFtZSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICBjb25zb2xlLmxvZyh0aGlzLm5hbWUpOwogICAgICBSZXBvc2l0b3J5RGF0YVNlcnZpY2UuZmluZEJ5TmFtZSh0aGlzLm5hbWUpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMzLnJlcG9zaXRvcmllcyA9IHJlc3BvbnNlLmRhdGEubWFwKF90aGlzMy5nZXREaXNwbGF5UmVwb3NpdG9yeSk7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgIH0pOwogICAgfSwKICAgIGVkaXRSZXBvc2l0b3J5OiBmdW5jdGlvbiBlZGl0UmVwb3NpdG9yeShpZCkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgbmFtZTogInJlcG9zaXRvcnktZGV0YWlscyIsCiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBpZDogaWQKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGRlbGV0ZVJlcG9zaXRvcnk6IGZ1bmN0aW9uIGRlbGV0ZVJlcG9zaXRvcnkoaWQpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICBSZXBvc2l0b3J5RGF0YVNlcnZpY2UuZGVsZXRlKGlkKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczQucmVmcmVzaExpc3QoKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0RGlzcGxheVJlcG9zaXRvcnk6IGZ1bmN0aW9uIGdldERpc3BsYXlSZXBvc2l0b3J5KHJlcG9zaXRvcnkpIHsKICAgICAgY29uc29sZS5sb2cocmVwb3NpdG9yeSk7CiAgICAgIHJldHVybiB7CiAgICAgICAgaWQ6IHJlcG9zaXRvcnkuaWQsCiAgICAgICAgYXZhdGFyX3VybDogcmVwb3NpdG9yeS5hdmF0YXJfdXJsLAogICAgICAgIG5hbWU6IHJlcG9zaXRvcnkubmFtZSwKICAgICAgICBsYW5ndWFnZTogcmVwb3NpdG9yeS5sYW5ndWFnZSwKICAgICAgICBvd25lcjogcmVwb3NpdG9yeS5vd25lciwKICAgICAgICBzdGFyZ2F6ZXJzX2NvdW50OiByZXBvc2l0b3J5LnN0YXJnYXplcnNfY291bnQsCiAgICAgICAgZm9ya3M6IHJlcG9zaXRvcnkuZm9ya3MsCiAgICAgICAgaHRtbF91cmw6IHJlcG9zaXRvcnkuaHRtbF91cmwsCiAgICAgICAgZGVzY3JpcHRpb246IHJlcG9zaXRvcnkuZGVzY3JpcHRpb24ubGVuZ3RoID4gMzAgPyByZXBvc2l0b3J5LmRlc2NyaXB0aW9uLnN1YnN0cigwLCAzMCkgKyAiLi4uIiA6IHJlcG9zaXRvcnkuZGVzY3JpcHRpb24KICAgICAgfTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnJldHJpZXZlUmVwb3NpdG9yaWVzKCk7CiAgfQp9Ow=="},{"version":3,"sources":["RepositoriesList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-row align=\"center\" class=\"px-3 mx-auto mt-10\">\r\n    <v-col cols=\"12\" md=\"8\">\r\n      <!-- <v-text-field v-model=\"name\" label=\"Buscar pelo Nome\"></v-text-field> -->\r\n    </v-col>\r\n\r\n    <v-col cols=\"12\" md=\"4\">\r\n      <!-- <v-btn small @click=\"searchName\">\r\n        Buscar\r\n      </v-btn> -->\r\n    </v-col>\r\n\r\n    <v-col cols=\"12\" sm=\"12\" >\r\n      <v-card class=\"mx-auto\" tile>\r\n        <v-card-title>Reposit√≥rios</v-card-title>\r\n\r\n        <v-data-table\r\n          :headers=\"headers\"\r\n          :items=\"repositories\"\r\n          disable-pagination\r\n          :hide-default-footer=\"true\"\r\n        >\r\n          <template v-slot:[`item.actions`]=\"{ item }\">\r\n            <v-icon small class=\"mr-2\" @click=\"editRepository(item.id)\">mdi-plus</v-icon>\r\n            <v-icon small @click=\"deleteRepository(item.id)\">mdi-delete</v-icon>\r\n          </template>\r\n        </v-data-table>\r\n\r\n        <v-card-actions v-if=\"repositories.length > 0\">\r\n          <v-btn small color=\"error\" @click=\"removeAllRepositories\">\r\n            Deletar todos\r\n          </v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-col>\r\n  </v-row>\r\n</template>\r\n\r\n<script>\r\nimport RepositoryDataService from \"../services/RepositoryDataService\";\r\nexport default {\r\n  name: \"repositories-list\",\r\n  data() {\r\n    return {\r\n      repositories: [],\r\n      name: \"\",\r\n      headers: [\r\n        { text: \"Nome\", align: \"start\", sortable: false, value: \"name\" },\r\n        // { text: \"Avatar\", value: \"avatar_url\", sortable: false },\r\n        { text: \"Linguagem\", value: \"language\", sortable: false },\r\n        // { text: \"Dono\", value: \"owner\", sortable: false },\r\n        { text: \"Qtd. Estrelas\", value: \"stargazers_count\", sortable: false },\r\n        // { text: \"Forks\", value: \"forks\", sortable: false },\r\n        { text: \"URL\", value: \"html_url\", sortable: false },\r\n        // { text: \"Descri√ßao\", value: \"description\", sortable: false },\r\n        { text: \"Actions\", value: \"actions\", sortable: false }\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    retrieveRepositories() {\r\n      RepositoryDataService.getAll()\r\n        .then((response) => {\r\n          this.repositories = response.data.map(this.getDisplayRepository);\r\n          console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    refreshList() {\r\n      this.retrieveRepositories();\r\n    },\r\n\r\n    removeAllRepositories() {\r\n      RepositoryDataService.deleteAll()\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          this.refreshList();\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    searchName() {\r\n      console.log(this.name)\r\n      RepositoryDataService.findByName(this.name)\r\n        .then((response) => {\r\n          this.repositories = response.data.map(this.getDisplayRepository);\r\n          console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    editRepository(id) {\r\n      this.$router.push({ name: \"repository-details\", params: { id: id } });\r\n    },\r\n\r\n    deleteRepository(id) {\r\n      RepositoryDataService.delete(id)\r\n        .then(() => {\r\n          this.refreshList();\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    getDisplayRepository(repository) {\r\n      console.log(repository)\r\n      return {\r\n        id: repository.id,\r\n        avatar_url: repository.avatar_url,\r\n        name: repository.name,\r\n        language: repository.language,\r\n        owner: repository.owner,\r\n        stargazers_count: repository.stargazers_count,\r\n        forks: repository.forks,\r\n        html_url: repository.html_url,\r\n        description: repository.description.length > 30 ? repository.description.substr(0, 30) + \"...\" : repository.description,\r\n      };\r\n    },\r\n  },\r\n  mounted() {\r\n    this.retrieveRepositories();\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* .list {\r\n  max-width: 750px;\r\n} */\r\n</style>"],"sourceRoot":"src/components"}]}